plot(fitted(nmod), fitted(fmod), col=dat$num+1, xlab="Numeric", ylab="Factor", main="Fitted values with x numeric vs. factor")
abline(0,1)
# f_1 and f_2 for the two parametrizations
plot(fmod, main="Factor 'by' variable")
plot(nmod, main="Numeric 'by' variable")
# Model with same variable as a factor: separate *centered* smooth for each group
summary(fmod <- gam(cases_per_capita ~ cont + s(week, by=cont), data=agg_data, method="REML"))
# f_1 and f_2 for the two parametrizations
plot(fmod, main="Factor 'by' variable")
plot(m3_1, main="Numeric 'by' variable")
summary(m3_4 <- gam(cases_per_capita ~ cont + s(week)+ s(week,by=cont,bs="cc")+ te(week,by=cont), data = agg_data ,
method = "REML"))
plot(m3_4, main="Numeric 'by' variable")
plot(m3_4, main="Numeric 'by' variable")
par(mfrow=c(3,4))
plot(m3_4, main="Numeric 'by' variable")
summary(m3_4 <- gam(cases_per_capita ~ cont + s(week)+ s(week,by=cont,bs="cc")+ te(week,by=cont), data = agg_data ,
method = "REML"))
summary(m3_3 <- gam(cases_per_capita ~ s(week)+ s(week,by=cont,bs="cc")+ te(week,by=cont), data = agg_data , method = "REML"))
par(mfrow=c(3,3))
plot(m3_4)
anova(m3_1,m3_2)
anova(m3_1,m3_2,m3_3,m3_4)
pander(anova(m3_1,m3_2,m3_3,m3_4))
pander(anova(m3_1,m3_2,m3_3,m3_4),caption = 'Anova 4 models')
fitted(m3_4)
plot(fitted(m3_4))
# low p val -> not equal
t.test(asia, y = europe, alternative = c("two.sided"),
paired = TRUE, var.equal = FALSE, conf.level = 0.95)
# low p val -> not equal
t.test(asia, y = europe, alternative = c("two.sided"),
paired = TRUE, var.equal = FALSE, conf.level = 0.95)
##### -------- aggregating all countries in same continent a- sum all weekly cases and adjust
asia <-  agg_data[(agg_data$continentExp == 'Asia'),]$cases_per_capita
europe <-  agg_data[(agg_data$continentExp == 'Europe'),]$cases_per_capita
# low p val -> not equal
t.test(asia, y = europe, alternative = c("two.sided"),
paired = TRUE, var.equal = FALSE, conf.level = 0.95)
##### ------- looking at all the countries independently in groups on continents , each country adjusted
asia <-  data[(data$continentExp == 'Asia'),]$cases_per_capita
europe <-  data[(data$continentExp == 'Europe'),]$cases_per_capita
# low p val -> not equal
t.test(asia, y = europe, alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE, conf.level = 0.95)
# low p val -> not equal
pander(t.test(asia, y = europe, alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE, conf.level = 0.95)
)
asia
# low p val -> not equal
pander(t.test(asia, y = europe, alternative = c("two.sided"),
paired = TRUE, var.equal = FALSE, conf.level = 0.95))
# low p val -> not equal
t.test(asia, y = europe, alternative = c("two.sided"),
paired = TRUE, var.equal = FALSE, conf.level = 0.95)
##### -------- aggregating all countries in same continent a- sum all weekly cases and adjust
asia <-  agg_data[(agg_data$continentExp == 'Asia'),]$cases_per_capita
europe <-  agg_data[(agg_data$continentExp == 'Europe'),]$cases_per_capita
# low p val -> not equal
pander(t.test(asia, y = europe, alternative = c("two.sided"), paired = TRUE, var.equal = FALSE, conf.level = 0.95))
p <- ggplot(france, aes(x=dateRep, y=cases_weekly)) +
geom_line() +
xlab("")+ ggtitle("Plot of weekly cases in France")
grid.arrange(p)
data$dateRep
m3 <- gam(cases_weekly ~ ti(week) +s(week), data = france)
# plot diagnostics
par(mfrow = c(2,2))
gam.check(m3)
ggplot(france, aes(week, cases_weekly)) + geom_point() + geom_smooth(method = "gam", formula = y ~te(x))
asia
m3_1 <- gam(cases_per_capita ~ s(week)+ s(week,by=cont,bs="cc"), data = data , method = "REML")
data$week <- str_split_fixed(data$year_week,'-',2)[,2]
data$week <- as.numeric(data$week)
agg_data <- data %>%
group_by(continentExp,year_week) %>%
summarise(cases_weekly = sum(cases_weekly),
popData2019 = sum(popData2019))
agg_data$cases_per_capita <- agg_data$cases_weekly / agg_data$popData2019 * 100000
agg_data <- agg_data[(agg_data$continentExp == 'Asia')|((agg_data$continentExp == 'Europe')),]
agg_data$cont <- factor(agg_data$continentExp)
agg_data<- na.omit(agg_data)
cases_per_capita<- as.vector(agg_data$cases_per_capita)
dateRep <- agg_data$dateRep
cont <- agg_data$cont
cont_plot <- ggplot(agg_data, aes(x = week, y = cases_per_capita, colour = factor(cont)))+
geom_point(size=2.5)+ ggtitle('Plot of Avg Adjusted cases per 100K weekly')
cont_plot$labels$colour <- "Continent"
grid.arrange(cont_plot)
# crete set of data aggregated by continent and sum weekly cases and population (per week)
agg_data <- data %>%
group_by(continentExp,week) %>%
summarise(cases_weekly = sum(cases_weekly),
popData2019 = sum(popData2019))
agg_data$cases_per_capita <- agg_data$cases_weekly / agg_data$popData2019 * 100000
agg_data <- agg_data[(agg_data$continentExp == 'Asia')|((agg_data$continentExp == 'Europe')),]
agg_data$cont <- factor(agg_data$continentExp)
agg_data<- na.omit(agg_data)
cases_per_capita<- as.vector(agg_data$cases_per_capita)
dateRep <- agg_data$dateRep
cont <- agg_data$cont
cont_plot <- ggplot(agg_data, aes(x = week, y = cases_per_capita, colour = factor(cont)))+
geom_point(size=2.5)+ ggtitle('Plot of Avg Adjusted cases per 100K weekly')
cont_plot$labels$colour <- "Continent"
grid.arrange(cont_plot)
m3_1 <- gam(cases_per_capita ~ s(week)+ s(week,by=cont,bs="cc"), data = agg_data , method = "REML")
m3_2 <- gam(cases_per_capita ~ s(week)+ te(week,by=cont), data = agg_data , method = "REML")
m3_3 <- gam(cases_per_capita ~ s(week)+ s(week,by=cont,bs="cc")+ te(week,by=cont), data = agg_data , method = "REML")
summary(m3_4 <- gam(cases_per_capita ~ cont + s(week)+ s(week,by=cont,bs="cc")+ te(week,by=cont), data = agg_data ,
method = "REML"))
par(mfrow=c(3,3))
plot(m3_4)
pander(anova(m3_1,m3_2,m3_3,m3_4),caption = 'Anova 4 models')
m3_1 <- gam(cases_per_capita ~ s(week)+ s(week,by=cont,bs="cc"), data = data , method = "REML")
##### -------- aggregating all countries in same continent a- sum all weekly cases and adjust
asia <-  agg_data[(agg_data$continentExp == 'Asia'),]$cases_per_capita
europe <-  agg_data[(agg_data$continentExp == 'Europe'),]$cases_per_capita
diff(asia,1)
# low p val -> not equal
pander(t.test(diff(asia,1), y = diff(europe,1), alternative = c("two.sided"), paired = TRUE, var.equal = FALSE, conf.level = 0.95))
# low p val -> not equal
pander(t.test(diff(asia,1), y = diff(europe,1), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95))
pander(adf.test(europe), caption = "Dickey Fuller Test")
pander(adf.test(asia), caption = "Dickey Fuller Test")
library(dtw)
install.packages("dtw")
distMatrix <- dist(sample2, method="DTW")
library(dtw)
distMatrix <- dist(sample2, method="DTW")
distMatrix <- dist(c(asia,europe), method="DTW")
distMatrix
hc <- hclust(distMatrix, method='average')
plot(hc, labels=observedLabels, main='')
hc
plot(hc, main='')
plot(hc, main='')
data
data[cols,]
cols <- c('countriesAndTerritories','week','cases_weekly')
data[cols]
library(pivottabler)
qhpvt(pv, "week", "countriesAndTerritories", "n()") # TOC = Train Operating Company
pv <- data[cols]
qhpvt(pv, "week", "countriesAndTerritories", "n()") # TOC = Train Operating Company
pv_reshape<- qhpvt(pv, "week", "countriesAndTerritories", "n()") # TOC = Train Operating Company
library(reshape2)
recast(pv, week  ~ countriesAndTerritories)
pv
recast(pv, week  ~ countriesAndTerritories)
recast(pv, week  ~ countriesAndTerritories, id.var = c( "week"))
recast(pv, week  ~ countriesAndTerritories, id.var = c( "week",'countriesAndTerritories'))
pv
reshape(pv, "week", "countriesAndTerritories")
pv
pv[pv$week > 10 , ]
pv <- pv[pv$week > 10 , ]
recast(pv, week  ~ countriesAndTerritories, id.var = c( "week",'countriesAndTerritories'))
rs <- reshape(pv[,c("week","countriesAndTerritories","cases_weekly")],direction='w',idvar=c("countriesAndTerritories"), timevar="week",v.names="cases_weekly")
rs
rec[is.na(rec)] <- 0
rec <- recast(pv, week  ~ countriesAndTerritories, id.var = c( "week",'countriesAndTerritories'))
rec[is.na(rec)] <- 0
require(dtw)
rr <- recast(pv, week  ~ countriesAndTerritories, id.var = c( "week",'countriesAndTerritories'))
rr[is.na(rr)] <- 0
require(dtw)
jj <- dist(rr, method="dtw")
mds <- cmdscale(jj, eig=TRUE)
plot(mds$points[,1:2], col=secvec, pch=16, cex=.8, xlab="Principal coordinate 1", ylab="Principal coordinate 2")
legend("bottomleft", legend=c("Bedouin","Golan Druze","Other Druze","Other Arab","Haredi","Other"), pch=16, col=c(2,7,6,3,1,4))
legend("bottomleft", legend=c(), pch=16, col=c(2,7,6,3,1,4))
legend("bottomleft", pch=16, col=c(2,7,6,3,1,4))
plot(mds$points[,1:2], col=secvec, pch=16, cex=.8, xlab="Principal coordinate 1", ylab="Principal coordinate 2")
jj
mds <- cmdscale(jj, eig=TRUE)
mds
mds$points[,1:2]
plot(mds$points[,1:2], pch=16, cex=.8, xlab="Principal coordinate 1", ylab="Principal coordinate 2")
mds
require(cluster)
p3 <- pam(jj,3)      # k-medoids clustering
table(p3$clust,rs$sector)
table(p3$clust,rs$countriesAndTerritories)
pv <- pv[pv$week > 10 , ]
rr <- recast(pv, week  ~ countriesAndTerritories, id.var = c( "week",'countriesAndTerritories'))
table(p3$clust,rr$countriesAndTerritories)
p3
p3$clust
length(p3$clust)
length(pv$countriesAndTerritories)
reshape(pv[,c("week","countriesAndTerritories","cases_weekly")],direction='w',idvar=c("cases_weekly"), timevar="date",v.names="countriesAndTerritories")
rs <- reshape(pv[,c("week","countriesAndTerritories","cases_weekly")],direction='w',idvar=c("countriesAndTerritories"), timevar="date",v.names="cases_weekly")
rs <-
reshape(pv[,c("week","countriesAndTerritories","cases_weekly")],direction='w',idvar=c("cases_weekly"), timevar="week",v.names="countriesAndTerritories")
rs
rs<-   reshape(pv[,c("week","countriesAndTerritories","cases_weekly")],direction='w',idvar=c("countriesAndTerritories"), timevar="week",v.names="cases_weekly")
rs
rr<- rs
rr[is.na(rr)] <- 0
rr
matplot(unique(wed$date), t(rr), type='l',lty=1, xlab="", ylab="Weekly cases per 10000 residents")
matplot(unique(pv$week), t(rr), type='l',lty=1, xlab="", ylab="Weekly cases per 10000 residents")
matplot(unique(rr$week), t(rr), type='l',lty=1, xlab="", ylab="Weekly cases per 10000 residents")
jj <- dist(rr, method="dtw")
rr
reshape(pv[,c("week","countriesAndTerritories","cases_weekly")],direction='l',idvar=c("countriesAndTerritories"), timevar="week",v.names="cases_weekly")
pv_reshape<- qhpvt(pv, "week", "countriesAndTerritories", "n()") # TOC = Train Operating Company
library(reshape2)
pv <- pv[pv$week > 10 , ]
rr <- recast(pv, week  ~ countriesAndTerritories, id.var = c( "week",'countriesAndTerritories'))
rr[is.na(rr)] <- 0
require(dtw)
jj <- dist(rr, method="dtw")
mds <- cmdscale(jj, eig=TRUE)
plot(mds$points[,1:2], pch=16, cex=.8, xlab="Principal coordinate 1", ylab="Principal coordinate 2")
plot(mds$points[,1:2], pch=16, cex=.8, xlab="Principal coordinate 1", ylab="Principal coordinate 2")
rr$countriesAndTerritories
rr
table(p3$clust,pv$countriesAndTerritories)
unique(pv$countriesAndTerritories)
length(unique(pv$countriesAndTerritories))
rr
jj
dist(rr, method="dtw")
rr <- recast(pv, countriesAndTerritories  ~ week, id.var = c( "week",'countriesAndTerritories'))
rr[is.na(rr)] <- 0
rr
jj <- dist(rr, method="dtw")
names(rr)
jj <- dist(rr[1,], method="dtw")
jj
rr[1,]
rr[,2:]
rr[,1]
rr[,-1]
jj <- dist(rr[,-1], method="dtw")
jj
mds <- cmdscale(jj, eig=TRUE)
plot(mds$points[,1:2], pch=16, cex=.8, xlab="Principal coordinate 1", ylab="Principal coordinate 2")
plot(mds$points[,1:2], pch=16, cex=.18, xlab="Principal coordinate 1", ylab="Principal coordinate 2")
plot(mds$points[,1:2], pch=8, cex=.8, xlab="Principal coordinate 1", ylab="Principal coordinate 2")
require(cluster)
p3 <- pam(jj,3)      # k-medoids clustering
table(p3$clust,pv$countriesAndTerritories)
table(p3$clust,rr[,1])
rr
matplot(unique(rr$week), t(rr), col=p3$cluster, type='l',lty=1)
plot(rr)
plot(pv)
matplot(unique(pv$week), t(rr), col=p3$cluster, type='l',lty=1)
matplot(unique(pv$week), t(pv), col=p3$cluster, type='l',lty=1)
p3
p3$cluster
table(p3$clust,rr[,1])
p3 <- pam(jj,5)      # k-medoids clustering
table(p3$clust,rr[,1])
pv
rr
recasted_again <- recast(rr, week  ~ countriesAndTerritories, id.var = c( "week",'countriesAndTerritories'))
pv
recasted_Again <- recast(pv, week  ~ countriesAndTerritories, id.var = c( "week",'countriesAndTerritories'))
recasted_Again
plot(countriesAndTerritories)
t_table <- table(p3$clust,rr[,1])
t_table
transpose(t_table)
t(t_table)
summary(t(t_table))
t_table[t_table$2 ==1]
t_table[t_table$'2' ==1]
t_table
#merge with continent and compare
t_table <- t(t_table)
t_table
names(t_table)
names(t_table)<- ['1','2','3','4','5']
names(t_table)<- c('1','2','3','4','5')
names(t_table)
t_table
names(t_table)
t_table <- table(p3$clust,rr[,1])
#merge with continent and compare
tr_table <- as.data.frame(t(t_table[,-1]))
tr_table
#merge with continent and compare
tr_table <- as.data.frame(t(t_table))
tr_table
t(t_table)
tr_table
t(t_table)
#merge with continent and compare
tr_table <- data.frame(t(t_table))
tr_table
#merge with continent and compare
tr_table <- data.table(t(t_table))
#merge with continent and compare
tr_table <- t(t_table)
tr_table
as.data.frame(tr_table)
tr_table
as.data.frame(tr_table)
colnames(tr_table)
tr_table[,1]
tr_table[tr_table[,1] ==1]
tr_table[tr_table[,1] ==1,]
# all cluster 2
tr_table[tr_table[,2] ==1,]
# all cluster 5
tr_table[tr_table[,5] ==1,]
# all cluster 4
tr_table[tr_table[,4] ==1,]
p3 <- pam(jj,3)      # k-medoids clustering
t_table <- table(p3$clust,rr[,1])
matplot(unique(pv$week), t(pv), col=p3$cluster, type='l',lty=1)
legend("topleft", legend=paste("Cluster",1:3), lty=1, col=1:3)
#merge with continent and compare
tr_table <- t(t_table)
# all cluster 1
tr_table[tr_table[,1] ==1,]
# all cluster 2
tr_table[tr_table[,2] ==1,]
# all cluster 3
tr_table[tr_table[,3] ==1,]
plot(mds$points[,1:2], pch=16, cex=.8, xlab="Principal coordinate 1", ylab="Principal coordinate 2")
plot(mds$points[,1:2], pch=16, cex=.8, xlab="Principal coordinate 1", ylab="Principal coordinate 2",col=p3$cluster)
tr_table
sum(tr_table)
sum(tr_table[,1])
sum(tr_table[,2])
sum(tr_table[,3])
# all cluster 2
tr_table[tr_table[,2] ==1,]
names(data)
data[c('countriesAndTerritories','continentExp')]
unique(data[c('countriesAndTerritories','continentExp')])
left_join(tr_table,unique(data[c('countriesAndTerritories','continentExp')]))
cbind(tr_table,unique(data[c('countriesAndTerritories','continentExp')]))
tr_table
left_join
left_join(tr_table,unique(data[c('countriesAndTerritories','continentExp')]))
left_join(data.frame(tr_table),data.frame(unique(data[c('countriesAndTerritories','continentExp')])))
tr_table
continents_and_countries <- unique(data[c('countriesAndTerritories','continentExp')]
continents_and_countries <- unique(data[c('countriesAndTerritories','continentExp')])
continents_and_countries <- unique(data[c('countriesAndTerritories','continentExp')])
View(continents_and_countries)
continents_and_countries <- as.table(unique(data[c('countriesAndTerritories','continentExp')]))
continents_and_countries <- as.data.frame(unique(data[c('countriesAndTerritories','continentExp')]))
continents_and_countries
left_join(tr_table,unique(data[c('countriesAndTerritories','continentExp')]))
left_join(as.data.frame.matrix(tr_table),unique(data[c('countriesAndTerritories','continentExp')]))
as.data.frame.matrix(tr_table)
unique(data[c('countriesAndTerritories','continentExp')])
left_join(as.data.frame.matrix(tr_table),continents_and_countries)
continents_and_countries
rownames(continents_and_countries) <- continents_and_countries$countriesAndTerritories
left_join(as.data.frame.matrix(tr_table),continents_and_countries)
continents_and_countries
df_tr_table <- as.data.frame.matrix(tr_table)
df_tr_table
df_tr_table
rownames(df_tr_table) <- df_tr_table$countriesAndTerritories
left_join(,continents_and_countries)
left_join(df_tr_table,continents_and_countries)
left_join(df_tr_table,continents_and_countries, by = 'countriesAndTerritories')
merge(df_tr_table,continents_and_countries, df_tr_table$countriesAndTerritories, continents_and_countries$countriesAndTerritories)
merge(df_tr_table,continents_and_countries, df_tr_table$countriesAndTerritories, continents_and_countries$countriesAndTerritories, all.x=FALSE, all.y=FALSE)
df_tr_table
merge(tr_table,continents_and_countries, tr_table$countriesAndTerritories, continents_and_countries$countriesAndTerritories, all.x=FALSE, all.y=FALSE)
continents_and_countries
merge(tr_table,continents_and_countries, tr_table$countriesAndTerritories, continents_and_countries$countriesAndTerritories, all.x=FALSE, all.y=FALSE)
merge(tr_table,continents_and_countries, tr_table[,'countriesAndTerritories'], continents_and_countries[,'countriesAndTerritories'], all.x=FALSE, all.y=FALSE)
merge(tr_table,continents_and_countries, by.x=tr_table[,'countriesAndTerritories'], by.y=continents_and_countries[,'countriesAndTerritories'], all.x=FALSE, all.y=FALSE)
merge(tr_table,continents_and_countries, by.x='countriesAndTerritories', by.y=continents_and_countries[,'countriesAndTerritories'], all.x=FALSE, all.y=FALSE)
merge(x = tr_table,y = continents_and_countries, by.x='countriesAndTerritories', by.y=continents_and_countries[,'countriesAndTerritories'], all.x=FALSE, all.y=FALSE)
merge(x = tr_table,y = continents_and_countries, by.x='countriesAndTerritories', by.y='countriesAndTerritories', all.x=FALSE, all.y=FALSE)
df_tr_table
df_tr_table <- as.data.frame.matrix(tr_table)
df_tr_table
merge(x = df_tr_table,y = continents_and_countries, by.x='countriesAndTerritories', by.y='countriesAndTerritories', all.x=FALSE, all.y=FALSE)
merge(x = df_tr_table,y = continents_and_countries, by.x='countriesAndTerritories', by.y='countriesAndTerritories', all.x=FALSE, all.y=FALSE)
total <- merge(df_tr_table,continents_and_countries,by=c("countriesAndTerritories"))
df_tr_table
t_table
as.data.frame(t_table)
df_tr_table
tr_table
df_tr_table$countriesAndTerritories <- continents_and_countries$countriesAndTerritories
df_tr_table
continents_and_countries
pv <- data[cols]
library(reshape2)
#pv <- pv[pv$week > 10 , ]
rr <- recast(pv, countriesAndTerritories  ~ week, id.var = c( "week",'countriesAndTerritories'))
rr[is.na(rr)] <- 0
require(dtw)
jj <- dist(rr[,-1], method="dtw")
mds <- cmdscale(jj, eig=TRUE)
plot(mds$points[,1:2], pch=16, cex=.8, xlab="Principal coordinate 1", ylab="Principal coordinate 2")
df_tr_table
df_tr_table$countriesAndTerritories <- rownames(df_tr_table)
df_tr_table
merge(x = df_tr_table,y = continents_and_countries, by.x='countriesAndTerritories', by.y='countriesAndTerritories', all.x=FALSE, all.y=FALSE)
agg_data <- m %>%
group_by(continentExp,week) %>%
summarise(class1 = sum(1),
)
m<- merge(x = df_tr_table,y = continents_and_countries, by.x='countriesAndTerritories', by.y='countriesAndTerritories', all.x=FALSE, all.y=FALSE)
m %>%
group_by(continentExp,week) %>%
summarise(class1 = sum(1),
)
m %>%
group_by(continentExp) %>%
summarise(class1 = sum(1),
)
m %>%
group_by(continentExp) %>%
summarise(class1 = count(1),
)
m %>%
group_by(continentExp) %>%
summarise(class1 = count(1), class2(2), class3(3)
)
m %>%
group_by(continentExp)
group_by(continentExp) %>%
m %>%
group_by(continentExp) %>%
summarise(across(everything(), list(mean)))
m %>%
group_by(continentExp) %>%
summarise(across(everything(), list(mean)))
m %>%
group_by(continentExp) %>%
summarise(across(c(1,2,3), list(mean)))
m %>%
group_by(continentExp) %>%
summarise(across(c(2,3,4), list(mean)))
# all cluster 3
tr_table[tr_table[,3] ==1,]
infile <- url('hw4.Rmd')
infile <- 'hw4.Rmd'
output <- backstitch(infile, output_type = 'script', chunk_header = "#+")
devtools::source_gist('284671997992aefe295bed34bb53fde6', filename = 'backstitch.R')
> output <- backstitch(infile, output_type = 'script', chunk_header = "#+")
rmd_to_r("hw4.Rmd", encoding = "latin1")
purl(hw4.Rmd)
knitr::purl(hw4.Rmd)
knitr::purl(School/courses/applied_stats/p4/hw4.Rmd)
knitr::purl('hw4.Rmd')
p3 <- pam(jj,4)      # k-medoids clustering
t_table <- table(p3$clust,rr[,1])
#merge with continent and compare
tr_table <- t(t_table)
tr_table
plot(mds$points[,1:2], pch=16, cex=.8, xlab="Principal coordinate 1", ylab="Principal coordinate 2",col=p3$cluster)
m %>%
group_by(continentExp) %>%
summarise(across(c(2,3,4), list(mean)))
m %>%
group_by(continentExp) %>%
summarise(across(c(2,3,4,5), list(mean)))
m %>%
group_by(continentExp) %>%
summarise(across(c(2,3,4), list(mean)))
model1 <- gamm(cases_weekly ~ ti(week), data = france)
model2<- gamm(cases_weekly ~ s(week), data = france)
model3<- gamm(cases_weekly ~ s(week) + ti(week), data = france)
model4<- gamm(cases_weekly ~ s(week, bs = 'cc', k = 52), data = france , method = "REML")
model5<- gamm(cases_weekly ~ s(week, bs = 'cc', k = 1), data = france , method = "REML")
model6<- gamm(cases_weekly ~ s(week, bs = 'cc', k = 10), data = france , method = "REML")
model7<- gamm(cases_weekly ~ s(week, bs = 'cc', k = 20), data = france , method = "REML")
model8<- gamm(cases_weekly ~ s(week), gamma=1 ,data = france , method = "REML")
model9<- gamm(cases_weekly ~ s(week), gamma=20 ,data = france , method = "REML")
model10 <- gamm(cases_weekly ~ s(week), gamma=0.1 ,data = france , method = "REML")
model11 <- gamm(cases_weekly ~ te(week) ,data = france , method = "REML")
anova(model1$lme,
model2$lme,
model3$lme)
anova(model4$lme,
model5$lme,
model6$lme,
model7$lme)
anova(model7$lme,
model8$lme,
model9$lme)
p3 <- pam(jj,4)      # k-medoids clustering
t_table
t_table <- table(p3$clust,rr[,1])
#merge with continent and compare
tr_table <- t(t_table)
sum(tr_table)
continents_and_countries <- as.data.frame(unique(data[c('countriesAndTerritories','continentExp')]))
rownames(continents_and_countries) <- continents_and_countries$countriesAndTerritories
df_tr_table <- as.data.frame.matrix(tr_table)
df_tr_table$countriesAndTerritories <- rownames(df_tr_table)
m<- merge(x = df_tr_table,y = continents_and_countries, by.x='countriesAndTerritories', by.y='countriesAndTerritories', all.x=FALSE, all.y=FALSE)
m
summary(m)
# all cluster 1
tr_table[tr_table[,1] ==1,]
# all cluster 2
tr_table[tr_table[,2] ==1,]
# all cluster 3
tr_table[tr_table[,3] ==1,]
# all cluster 3
tr_table[tr_table[,4] ==1,]
m %>%
group_by(continentExp) %>%
summarise(across(c(2,3,4), list(mean)))
